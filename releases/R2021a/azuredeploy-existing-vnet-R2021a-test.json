{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "instanceType": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "minLength": 1,
            "metadata": {
                "description": "Azure instance type, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes."
            }
        },
        "clientIPAddress": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "The IP address range that can be used access the license manager. This must be a valid IP CIDR range of the form x.x.x.x/x. Use the value <your_public_ip_address>/32 to restrict access to only your computer."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for user 'manager'. This is used to login to the Network License Manager for MATLAB dashboard."
            }
        },
        "virtualNetworkResourceID": {
            "type": "string",
            "metadata": {
                "description": "The Resource ID of an existing virtual network to deploy your server into. Specify this parameter only when deploying with the Existing Virtual Network option."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of an existing subnet within your virtual network to deploy your server into. Specify this parameter only when deploying with the Existing Virtual Network option."
            }
        },
        "vmdisk1Uri": {
            "type": "string",
            "metadata": {
                "description": "URI of the image to use"
            }
        },
        "userImageStorageAccountResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The storage account resource group into which to put the VHD. Must be the same as the storage account resource group that contains vmdisk1Uri."
            }
        },
        "userImageStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The storage account into which to put the VHD. Must be the same as the storage account that contains vmdisk1Uri."
            }
        }
    },
    "variables": {
        "adminUsername": "manager",
        "namingPrefix": "netlm",
        "artifactsBase": "C:/Windows/Temp/",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/24",
        "newOrExistingVirtualNetwork": "Existing",
        "virtualNetworkCreateName": "[concat(variables('namingPrefix'), '-vnet')]",
        "subnetCreateName": "[concat(variables('namingPrefix'), '-subnet')]",
        "virtualNetworkName": "[if(equals(variables('newOrExistingVirtualNetwork'),'Existing'),last(split(parameters('virtualNetworkResourceID'),'/')),variables('virtualNetworkCreateName'))]",
        "subnetName": "[if(equals(variables('newOrExistingVirtualNetwork'),'Existing'),parameters('subnetName'),variables('subnetCreateName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "subnetId": "[if(equals(variables('newOrExistingVirtualNetwork'),'New'),variables('subnetRef'),concat(parameters('virtualNetworkResourceID'), '/subnets/', parameters('subnetName')))]",
        "cuaTrackingNum": "8AE0EA28-E1D4-4627-9459-99DD4120C96E",
        "serverMachineName": "[concat(take(variables('namingPrefix'), 8), '-server')]",
        "serverIPName": "[concat(variables('serverMachineName'), '-ip')]",
        "dnsLabelPrefix": "[concat('azure-', uniqueString(resourceGroup().id))]",
        "publicIpTimeout": "20",
        "networkSecurityGroupName": "[concat(variables('namingPrefix'), '-nsg')]",
        "serverNICName": "[concat(variables('serverMachineName'), '-nic')]",
        "serverIPConfigName": "[concat(variables('serverMachineName'), '-ipconfig')]",
        "scriptsUrl": "C:/Windows/Temp/",
        "startScript": "startserver.ps1",
        "fileUris": [
            "[concat(variables('scriptsUrl'), variables('startScript'))]"
        ],
        "scriptExe": "[concat(variables('artifactsBase'), variables('startScript'))]",
        "installCommand": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptExe'))]",
        "stopSpoolerServiceCommand": "[concat('powershell -command ','Stop-Service -Name Spooler -Force; Set-Service -Name Spooler -StartupType Disabled')]",
        "tagsForAll": {
            "provider": "[variables('cuaTrackingNum')]"
        },
        "osDisk": {
            "name": "[concat(variables('vmName'),'-osDisk')]",
            "osType": "Windows",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "image": {
                "uri": "[parameters('vmdisk1Uri')]"
            }
        },
        "storageProfileWithoutDataDisk": {
            "osDisk": "[variables('osDisk')]"
        },
        "vmName": "servermachine",
        "storageAccountApiVersion": "2018-07-01"
    },
    "resources": [
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetCreateName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            },
            "condition": "[equals(variables('newOrExistingVirtualNetwork'),'New')]"
        },
        {
            "name": "[variables('serverIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('serverMachineName'), variables('dnsLabelPrefix'))]"
                },
                "idleTimeoutInMinutes": "[variables('publicIpTimeout')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-https",
                        "properties": {
                            "priority": 1010,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "443",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-netlm",
                        "properties": {
                            "priority": 1020,
                            "sourceAddressPrefix": "[parameters('clientIPAddress')]",
                            "protocol": "Tcp",
                            "destinationPortRange": "27000-27010",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allow-internal-traffic",
                        "properties": {
                            "priority": 1030,
                            "sourceAddressPrefix": "VirtualNetwork",
                            "protocol": "Tcp",
                            "destinationPortRange": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('serverNICName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('serverIPName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('serverIPConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('serverIPName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('serverMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('serverNICName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "osProfile": {
                    "computerName": "[variables('serverMachineName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-osDisk')]",
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "image": {
                            "uri": "[parameters('vmdisk1Uri')]"
                        },
                        "vhd": {
                            "uri": "[concat(reference(resourceId(parameters('userImageStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts/', parameters('userImageStorageAccountName')), variables('storageAccountApiVersion')).primaryEndpoints.blob, 'vhds/',variables('vmName'), uniquestring(resourceGroup().id), '-osDisk.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('serverNICName'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('serverMachineName'), '/Installation')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('serverMachineName'))]"
            ],
            "tags": "[variables('tagsForAll')]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('fileUris')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('stopSpoolerServiceCommand'),'; ',variables('installCommand'),' -DNS ', reference(variables('serverIPName')).dnsSettings.fqdn)]"
                }
            }
        },
        {
            "name": "[concat('pid-', toLower(variables('cuaTrackingNum')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('serverMachineName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        }
    ],
    "outputs": {
        "NetworkLicenseManagerAddress": {
            "value": "[concat('https://', reference(variables('serverIPName')).dnsSettings.fqdn)]",
            "type": "string"
        }
    }
}